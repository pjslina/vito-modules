<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <properties>
<!--        <property name="APPLICATION_NAME">${sys:spring.application.name:-log-demo}</property>-->
        <property name="APPLICATION_NAME">${spring:spring.application.name:-log-demo}</property>
        <!-- 日志目录 -->
        <property name="LOG_PATH">${spring:logging.path:-/home/works/program/logs}</property>
        <property name="FILE_PREFIX">${APPLICATION_NAME}</property>
        <!--控制台日志格式-->
        <property name="STDOUT_PATTERN">%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %X{traceId} [%t] %logger{} - %msg%n%throwable</property>
    </properties>

    <appenders>
        <Select>
            <!-- prod 生产环境日志不打印控制台-->
            <SystemPropertyArbiter propertyName="env" propertyValue="prod">
                <Null name="STDOUT"/>
            </SystemPropertyArbiter>

            <!-- 其他环境（test环境）控制台也打印日志，方便调试 -->
            <DefaultArbiter>
                <Console name="STDOUT" target="SYSTEM_OUT">
                    <PatternLayout pattern="${STDOUT_PATTERN}"/>
                </Console>
            </DefaultArbiter>
        </Select>

        <RollingRandomAccessFile name="ROLLING-FILE" filePattern="${LOG_PATH}/${FILE_PREFIX}.%d{yyyyMMddHH}.log">
            <PatternLayout>
                <pattern>
                    {
                    "log_time": "%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}{UTC}",
                    "log_level": "%p",
                    "hostname": "${hostName}",
                    "traceId": "%X{traceId}",
                    "logger_name": "%logger",
                    "thread_name": "%t",
                    "message": "%enc{%m}{JSON}",
                    "class": "%C",
                    "method": "%M",
                    "file": "%F",
                    "line_number": "%L",
                    "stacktrace": "%enc{%throwable}"
                    }\r\n
                </pattern>
                <alwaysWriteExceptions>false</alwaysWriteExceptions>
            </PatternLayout>
            <Policies>
                <!-- rollover on startup, daily and when the file reaches
                    10 MegaBytes -->
                <OnStartupTriggeringPolicy />
                <SizeBasedTriggeringPolicy size="10 MB" />
                <!-- 滚动周期，与filePattern相关 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
                <!-- 希望没有日志打印情况下也主动生成日志文件，可以配合CronTriggeringPolicy使用-->
                <!-- 配合上面filePattern，每小时检查2次日志文件是否生成： 00:01:00 00:02:00 -->
                <CronTriggeringPolicy schedule="0 1-2 * * * ? " />
            </Policies>
            <!-- 日志直接写入由filePattern表示的文件, 该配置与fileName属性冲突 -->
            <DirectWriteRolloverStrategy>
                <!-- 删除最后修改时间在7天以前的文件，age格式参考：org.apache.logging.log4j.core.appender.rolling.action.Duration.toString 上面的注释-->
                <Delete basePath="${LOG_PATH}" maxDepth="1">
                    <IfFileName glob="${FILE_PREFIX}.*" />
                    <IfLastModified age="P7D" />
                </Delete>
            </DirectWriteRolloverStrategy>
        </RollingRandomAccessFile>
    </appenders>

    <loggers>
        <AsyncRoot level="INFO" includeLocation="false">
            <appender-ref ref="STDOUT"/>
            <AppenderRef ref="ROLLING-FILE"/>
        </AsyncRoot>
    </loggers>
</configuration>